<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Echarts动态加载GeoJSON地图</title>
      <link href="/2018/06/02/hello-world/"/>
      <url>/2018/06/02/hello-world/</url>
      <content type="html"><![CDATA[<h2 id="Echarts监听GEO地图缩放比例"><a href="#Echarts监听GEO地图缩放比例" class="headerlink" title="Echarts监听GEO地图缩放比例"></a>Echarts监听GEO地图缩放比例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">myChart.on(<span class="string">'georoam'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//  console.log(arguments);</span></span><br><span class="line">    <span class="comment">// 回调函数自带的res中zoom永远都是1.1</span></span><br><span class="line">    <span class="built_in">console</span>.log(myChart.getOption().geo[<span class="number">0</span>].zoom);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="按需加载GEOJSON"><a href="#按需加载GEOJSON" class="headerlink" title="按需加载GEOJSON"></a>按需加载GEOJSON</h2><p>某个需求要求的是点亮用户去过的地方，国内到城市、国外精确到州。</p><p>在Echarts官方仓库中找到<a href="https://github.com/pissang/starbucks" target="_blank" rel="noopener"><strong>starbucks</strong></a>，内含各个州的GEO数据。</p><p>直觉告诉我只要拼起来就能实现word数据中包含所有州的信息。</p><h3 id="GEOJSON"><a href="#GEOJSON" class="headerlink" title="GEOJSON"></a>GEOJSON</h3><p><a href="https://www.oschina.net/translate/geojson-spec?lang=chs&amp;page=1#" target="_blank" rel="noopener">格式规范说明</a></p><p><img src="https://i.loli.net/2018/05/30/5b0e443bb5e1e.png" alt="carbon.png"></p><p>大致就是这样一个结构、具体的键值含义规范中有说明。<code>features</code>数组中的每一个对象都描述的是<strong>一块区域</strong>。那么把<code>world.json</code>里缺失的更细颗粒度的区域也加进来就ojbk了。</p><h3 id="多余的key"><a href="#多余的key" class="headerlink" title="多余的key"></a>多余的key</h3><p>上面结构多了<code>UTF8Encoding</code> <code>encodeOffsets</code> <code>name</code> 这几个key，在格式规范中不是必须的，看了下<code>Echarts</code>处理JSON部分的源码是有用到的，用于decode JSON文件。</p><h3 id="拼接"><a href="#拼接" class="headerlink" title="拼接"></a>拼接</h3><p>起初直接将两个JSON对象的<code>features</code>进行合并<code>world.features.concat(china.features)</code></p><p>失败了，合出来的JSON虽然符合规范，但是并不正确，渲染出来严重畸形。</p><p><img src="https://i.loli.net/2018/05/30/5b0e47c808ca9.png" alt="什么鬼(#`O′)"></p><p>经过对比，<code>world.json</code>中的<code>coordinates</code>字段为经纬度，<code>china.json</code>中则为Encode处理后的经纬度。</p><p>Debug源码发现由<code>UTF8Encoding</code>控制是否对JSON内容进行Decode，于是给合并后的JSON数据加上<code>UTF8Encoding = true</code>，然后又失败了。</p><p>控制台抛出异常：<code>Invalid geoJson format; coordinate.charCodeAt is not a function</code></p><p>喵喵喵??  decode完就格式就不对了…<br>Debug源码找到原因，<code>UTF8Encoding</code>为true开启decode后，对整个list进行decode操作，decode操作又要用到<code>encodeOffsets</code>，<code>world.json</code>没有这个key，所以就嗝屁了。</p><p>在拼接JSON前先把JSON给decode好，不就没问题了么，试了一下果然搞定了。</p><h3 id="看个效果"><a href="#看个效果" class="headerlink" title="看个效果"></a>看个效果</h3><p><img src="https://i.loli.net/2018/06/02/5b122a8887373.gif" alt="Jun-02-2018 13-25-09.gif"></p>]]></content>
      
      
        <tags>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
